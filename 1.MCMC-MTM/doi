###################################################################
#### Script for the analyses of the article:Multiple-trait  #######
####  model through Bayesian inference applied to Jatropha  #######
####          curcas breeding for bioenergy                 #######  
####                                                        #######
####           M.Sc. Marco AntÃ´nio Peixoto                  #######
####            marco.peixotom@gmail.com                    #######
####   Doi: https://doi.org/10.1371/journal.pone.0247775    #######
###################################################################


######-------------------------------------------------------------
######    Initializing the model
######-------------------------------------------------------------

###>>>>---- 1. data and initial features

library(MCMCglmm)

dados=read.table("") #dataset uppon request

#Into factors
dados$Rep=factor(dados$Rep)
dados$Gen=factor(dados$Gen)
dados$Parc=factor(dados$Parc)

###>>>>---- 2. Setting the initial parameters to the model

Niter=10000000 #Total number of interations
Burnin=1000000 #Initial values cut off from the analyses
Thin=50        #Interval of sampling
N=(Niter-Burnin)/Thin #Total number of iterations
N


###>>>>---- 3. Assuming a flat prior (small value of nu parameters 
###               means a non-informative prior) for the MTM

prior=list(R=list(V=matrix(c(0.0055981623,	0.0034794226,	0.0071438395,	0.0058742319,	0.0041112297,	0.0029538865,
                             0.0034794226,	0.0313844382,	0.0268299054,	0.0199651534,	0.0196765106,	0.0131060655,
                             0.0071438395,	0.0268299054,	0.1427122631,	0.0420666969,	0.0493745117,	0.0507637164,
                             0.0058742319,	0.0199651534,	0.0420666969,	0.137229974,	0.0328258354,	0.0616324894,
                             0.0041112297,	0.0196765106,	0.0493745117,	0.0328258354,	0.2012273703,	0.0962473077,
                             0.0029538865,	0.0131060655,	0.0507637164,	0.0616324894,	0.0962473077,	0.3099410299),6,6), nu=0.002),
           G=list(G1=list(V=matrix(c(0.0042862571,	0.0019703808,	0.0074806748,	0.0104041091,	0.018832982,	0.0152932139,
                                     0.0019703808,	0.0099302145,	0.004697958,	0.0027926588,	0.0314582369,	0.0276683811,
                                     0.0074806748,	0.004697958,	0.1017299558,	0.0384781212,	0.0964358233,	0.0866499991,
                                     0.0104041091,	0.0027926588,	0.0384781212,	0.069298409,	0.0903278018,	0.1073590267,
                                     0.018832982,	0.0314582369,	0.0964358233,	0.0903278018,	0.2562235448,	0.2194181917,
                                     0.0152932139,	0.0276683811,	0.0866499991,	0.1073590267,	0.2194181917,	0.2922315342),6,6), nu=0.002), 
                  G2=list(V=matrix(c(0.0035694361,	0.0007166926,	0.0060719182,	0.0046317858,	0.0051987345,	0.0024211086,
                                     0.0007166926,	0.0284134045,	0.0216181417,	0.0254828408,	0.026092587,	0.0098805558,
                                     0.0060719182,	0.0216181417,	0.1069809853,	0.0337400817,	0.0585500593,	0.0347639601,
                                     0.0046317858,	0.0254828408,	0.0337400817,	0.2512018288,	0.060470782,	0.1466652611,
                                     0.0051987345,	0.026092587,	0.0585500593,	0.060470782,	0.169605355,	0.0598629441,
                                     0.0024211086,	0.0098805558,	0.0347639601,	0.1466652611,	0.0598629441,	0.2235239377),6,6), nu=0.002)))




######-------------------------------------------------------------
######    Bayesian multitrai model
######-------------------------------------------------------------

###>>>>---- 4. Multitrait MCMC model

mod = MCMCglmm(fixed=cbind(M1,M2,M3,M4,M5,M6)~trait:Rep+trait, 
               random=~us(trait):Gen+us(trait):Parc, 
               rcov=~us(trait):units, 
               data=dados, 
               prior=prior, 
               family = c("gaussian","gaussian","gaussian","gaussian","gaussian","gaussian"), 
               verbose=TRUE, 
               DIC=TRUE, 
               nitt=Niter, 
               thin=Thin, 
               burnin=Burnin, 
               pr=T)


###>>>>---- 5. Extracting the information from the model


DIC=(mod$DIC) #DIC used to calculate significance of the random effects and model fit


###>>>>---- 6. Checking model convergence
library(boa) #Model convergence, parameters estimation and genotypic values

VCV=mod$VCV

boa.menu()



######-------------------------------------------------------------
######    Variance components
######-------------------------------------------------------------


###>>>>---- 7. Trait Heritability

h2.M1=mod$VCV[,1]/(mod$VCV[,1]+mod$VCV[,37]/2+mod$VCV[,73]/10)
h2.M2=mod$VCV[,8]/(mod$VCV[,8]+mod$VCV[,44]/2+mod$VCV[,80]/10)
h2.M3=mod$VCV[,15]/(mod$VCV[,15]+mod$VCV[,51]/2+mod$VCV[,87]/10)
h2.M4=mod$VCV[,22]/(mod$VCV[,22]+mod$VCV[,58]/2+mod$VCV[,94]/10)
h2.M5=mod$VCV[,29]/(mod$VCV[,29]+mod$VCV[,65]/2+mod$VCV[,101]/10)
h2.M6=mod$VCV[,36]/(mod$VCV[,36]+mod$VCV[,72]/2+mod$VCV[,108]/10)


h2=cbind(h2.M1,h2.M2,h2.M3,h2.M4,h2.M5,h2.M6)
colnames(h2)=c("h2.M1","h2.M2","h2.M3","h2.M4","h2.M5","h2.M6")

#boa

h2=h2

library(boa)
boa.menu()

###>>>>---- 8. Genetic correlation

C.M1M2=mod$VCV[,2]/sqrt(mod$VCV[,1]*mod$VCV[,8])
C.M1M3=mod$VCV[,3]/sqrt(mod$VCV[,1]*mod$VCV[,15])
C.M1M4=mod$VCV[,4]/sqrt(mod$VCV[,1]*mod$VCV[,22])
C.M1M5=mod$VCV[,5]/sqrt(mod$VCV[,1]*mod$VCV[,29])
C.M1M6=mod$VCV[,6]/sqrt(mod$VCV[,1]*mod$VCV[,36])
C.M2M3=mod$VCV[,9]/sqrt(mod$VCV[,8]*mod$VCV[,15])
C.M2M4=mod$VCV[,10]/sqrt(mod$VCV[,8]*mod$VCV[,22])
C.M2M5=mod$VCV[,11]/sqrt(mod$VCV[,8]*mod$VCV[,29])
C.M2M6=mod$VCV[,12]/sqrt(mod$VCV[,8]*mod$VCV[,36])
C.M3M4=mod$VCV[,16]/sqrt(mod$VCV[,15]*mod$VCV[,22])
C.M3M5=mod$VCV[,17]/sqrt(mod$VCV[,15]*mod$VCV[,29])
C.M3M6=mod$VCV[,18]/sqrt(mod$VCV[,15]*mod$VCV[,36])
C.M4M5=mod$VCV[,23]/sqrt(mod$VCV[,22]*mod$VCV[,29])
C.M4M6=mod$VCV[,24]/sqrt(mod$VCV[,22]*mod$VCV[,36])
C.M5M6=mod$VCV[,30]/sqrt(mod$VCV[,29]*mod$VCV[,36])

#Convergency

correl=cbind(C.M1M2,C.M1M3,C.M1M4,C.M1M5,C.M1M6,C.M2M3,C.M2M4,C.M2M5,C.M2M6,C.M3M4,C.M3M5,C.M3M6,C.M4M5,C.M4M6,C.M5M6)
colnames(correl)=c("C.M1M2","C.M1M3","C.M1M4","C.M1M5","C.M1M6","C.M2M3","C.M2M4","C.M2M5","C.M2M6","C.M3M4","C.M3M5","C.M3M6","C.M4M5","C.M4M6","C.M5M6")

#boa

correl=correl

library(boa)
boa.menu()


###>>>>---- 8. Phenotypic correlation

F.M1M2=(mod$VCV[,2]*mod$VCV[,74])/((sqrt(mod$VCV[,1]*mod$VCV[,73])) * (sqrt(mod$VCV[,8]*mod$VCV[,80])))
F.M1M3=(mod$VCV[,3]*mod$VCV[,75])/((sqrt(mod$VCV[,1]*mod$VCV[,73])) * (sqrt(mod$VCV[,15]*mod$VCV[,87])))
F.M1M4=(mod$VCV[,4]*mod$VCV[,76])/((sqrt(mod$VCV[,1]*mod$VCV[,73])) * (sqrt(mod$VCV[,22]*mod$VCV[,94])))
F.M1M5=(mod$VCV[,5]*mod$VCV[,77])/((sqrt(mod$VCV[,1]*mod$VCV[,73])) * (sqrt(mod$VCV[,29]*mod$VCV[,101])))
F.M1M6=(mod$VCV[,6]*mod$VCV[,78])/((sqrt(mod$VCV[,1]*mod$VCV[,73])) * (sqrt(mod$VCV[,36]*mod$VCV[,108])))
F.M2M3=(mod$VCV[,9]*mod$VCV[,81])/((sqrt(mod$VCV[,8]*mod$VCV[,80])) * (sqrt(mod$VCV[,15]*mod$VCV[,80])))
F.M2M4=(mod$VCV[,10]*mod$VCV[,82])/((sqrt(mod$VCV[,8]*mod$VCV[,80])) * (sqrt(mod$VCV[,22]*mod$VCV[,94])))
F.M2M5=(mod$VCV[,11]*mod$VCV[,83])/((sqrt(mod$VCV[,8]*mod$VCV[,80])) * (sqrt(mod$VCV[,29]*mod$VCV[,101])))
F.M2M6=(mod$VCV[,12]*mod$VCV[,84])/((sqrt(mod$VCV[,8]*mod$VCV[,80])) * (sqrt(mod$VCV[,36]*mod$VCV[,108])))
F.M3M4=(mod$VCV[,16]*mod$VCV[,88])/((sqrt(mod$VCV[,15]*mod$VCV[,87])) * (sqrt(mod$VCV[,22]*mod$VCV[,94])))
F.M3M5=(mod$VCV[,17]*mod$VCV[,89])/((sqrt(mod$VCV[,15]*mod$VCV[,87])) * (sqrt(mod$VCV[,29]*mod$VCV[,101])))
F.M3M6=(mod$VCV[,18]*mod$VCV[,90])/((sqrt(mod$VCV[,15]*mod$VCV[,87])) * (sqrt(mod$VCV[,36]*mod$VCV[,108])))
F.M4M5=(mod$VCV[,23]*mod$VCV[,95])/((sqrt(mod$VCV[,22]*mod$VCV[,94])) * (sqrt(mod$VCV[,29]*mod$VCV[,101])))
F.M4M6=(mod$VCV[,24]*mod$VCV[,96])/((sqrt(mod$VCV[,22]*mod$VCV[,94])) * (sqrt(mod$VCV[,36]*mod$VCV[,108])))
F.M5M6=(mod$VCV[,30]*mod$VCV[,102])/((sqrt(mod$VCV[,29]*mod$VCV[,101])) * (sqrt(mod$VCV[,36]*mod$VCV[,108])))

#boa


corF=cbind(F.M1M2,F.M1M3,F.M1M4,F.M1M5,F.M1M6,F.M2M3,F.M2M4,F.M2M5,F.M2M6,F.M3M4,F.M3M5,F.M3M6,F.M4M5,F.M4M6,F.M5M6)
colnames(corF)=c("F.M1M2","F.M1M3","F.M1M4","F.M1M5","F.M1M6","F.M2M3","F.M2M4","F.M2M5","F.M2M6","F.M3M4","F.M3M5","F.M3M6","F.M4M5","F.M4M6","F.M5M6")



corF=corF

library(boa)
boa.menu()

###>>>>---- 9. Additive Variance

VA.M1=4*(mod$VCV[,1])
VA.M2=4*(mod$VCV[,8])
VA.M3=4*(mod$VCV[,15])
VA.M4=4*(mod$VCV[,22])
VA.M5=4*(mod$VCV[,29])
VA.M6=4*(mod$VCV[,36])

VA=cbind(VA.M1,VA.M2,VA.M3,VA.M4,VA.M5,VA.M6)
colnames(VA)=c("VA.M1","VA.M2","VA.M3","VA.M4","VA.M5","VA.M6")



#boa

VA=VA

library(boa)
boa.menu()


###>>>>---- 10. Phenotypic Variance

VF.M1=mod$VCV[,1]+ mod$VCV[,37]+ mod$VCV[,73]
VF.M2=mod$VCV[,8]+ mod$VCV[,44]+ mod$VCV[,80]
VF.M3=mod$VCV[,15]+ mod$VCV[,51]+ mod$VCV[,87]
VF.M4=mod$VCV[,22]+ mod$VCV[,58]+ mod$VCV[,94]
VF.M5=mod$VCV[,29]+ mod$VCV[,65]+ mod$VCV[,101]
VF.M6=mod$VCV[,36]+ mod$VCV[,72]+ mod$VCV[,108]


VF=cbind(VF.M1,VF.M2,VF.M3,VF.M4,VF.M5,VF.M6)
colnames(VF)=c("VF.M1","VF.M2","VF.M3","VF.M4","VF.M5","VF.M6")


#boa

VF=VF

library(boa)
boa.menu()


###>>>>---- 11. Plot determination coefficient

CP.M1=(mod$VCV[,37]/ VF.M1)
CP.M2=(mod$VCV[,44]/ VF.M2)
CP.M3=(mod$VCV[,51]/ VF.M3)
CP.M4=(mod$VCV[,58]/ VF.M4)
CP.M5=(mod$VCV[,65]/ VF.M5)
CP.M6=(mod$VCV[,72]/ VF.M6)


CP=cbind(CP.M1,CP.M2,CP.M3,CP.M4,CP.M5,CP.M6)
colnames(CP)=c("CP.M1","CP.M2","CP.M3","CP.M4","CP.M5","CP.M6")


#boa

CP=CP

library(boa)
boa.menu()

###>>>>---- 11. Residual determination coefficient

CR.M1=(mod$VCV[,73]/ VF.M1)
CR.M2=(mod$VCV[,80]/ VF.M2)
CR.M3=(mod$VCV[,87]/ VF.M3)
CR.M4=(mod$VCV[,94]/ VF.M4)
CR.M5=(mod$VCV[,101]/ VF.M5)
CR.M6=(mod$VCV[,108]/ VF.M6)


CR=cbind(CR.M1,CR.M2,CR.M3,CR.M4,CR.M5,CR.M6)
colnames(CR)=c("CR.M1","CR.M2","CR.M3","CR.M4","CR.M5","CR.M6")


#boa

CR=CR

library(boa)
boa.menu()



###>>>>---- 12. Estimation of the random effects of the model

sol=mod$Sol
efeitos=as.matrix(colMeans(sol))
efeitos


#############################################################################
